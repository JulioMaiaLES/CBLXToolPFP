{"ast":null,"code":"import dateSplits from './dateSplits.esm.js';\nconst DATE_MAX_YEAR = 2050;\nconst DATE_MIN_YEAR = 1000;\nconst DATE_SPLITS = dateSplits;\nconst BRUTEFORCE_CARDINALITY = 10;\nconst MIN_GUESSES_BEFORE_GROWING_SEQUENCE = 10000;\nconst MIN_SUBMATCH_GUESSES_SINGLE_CHAR = 10;\nconst MIN_SUBMATCH_GUESSES_MULTI_CHAR = 50;\nconst MIN_YEAR_SPACE = 20;\n// \\xbf-\\xdf is a range for almost all special uppercase letter like Ä and so on\nconst START_UPPER = /^[A-Z\\xbf-\\xdf][^A-Z\\xbf-\\xdf]+$/;\nconst END_UPPER = /^[^A-Z\\xbf-\\xdf]+[A-Z\\xbf-\\xdf]$/;\n// \\xdf-\\xff is a range for almost all special lowercase letter like ä and so on\nconst ALL_UPPER = /^[A-Z\\xbf-\\xdf]+$/;\nconst ALL_UPPER_INVERTED = /^[^a-z\\xdf-\\xff]+$/;\nconst ALL_LOWER = /^[a-z\\xdf-\\xff]+$/;\nconst ALL_LOWER_INVERTED = /^[^A-Z\\xbf-\\xdf]+$/;\nconst ONE_LOWER = /[a-z\\xdf-\\xff]/;\nconst ONE_UPPER = /[A-Z\\xbf-\\xdf]/;\nconst ALPHA_INVERTED = /[^A-Za-z\\xbf-\\xdf]/gi;\nconst ALL_DIGIT = /^\\d+$/;\nconst REFERENCE_YEAR = new Date().getFullYear();\nconst REGEXEN = {\n  recentYear: /19\\d\\d|200\\d|201\\d|202\\d/g\n};\n/* Separators */\nconst SEPERATOR_CHARS = [' ', ',', ';', ':', '|', '/', '\\\\', '_', '.', '-'];\nconst SEPERATOR_CHAR_COUNT = SEPERATOR_CHARS.length;\nexport { ALL_DIGIT, ALL_LOWER, ALL_LOWER_INVERTED, ALL_UPPER, ALL_UPPER_INVERTED, ALPHA_INVERTED, BRUTEFORCE_CARDINALITY, DATE_MAX_YEAR, DATE_MIN_YEAR, DATE_SPLITS, END_UPPER, MIN_GUESSES_BEFORE_GROWING_SEQUENCE, MIN_SUBMATCH_GUESSES_MULTI_CHAR, MIN_SUBMATCH_GUESSES_SINGLE_CHAR, MIN_YEAR_SPACE, ONE_LOWER, ONE_UPPER, REFERENCE_YEAR, REGEXEN, SEPERATOR_CHARS, SEPERATOR_CHAR_COUNT, START_UPPER };","map":{"version":3,"names":["dateSplits","DATE_MAX_YEAR","DATE_MIN_YEAR","DATE_SPLITS","BRUTEFORCE_CARDINALITY","MIN_GUESSES_BEFORE_GROWING_SEQUENCE","MIN_SUBMATCH_GUESSES_SINGLE_CHAR","MIN_SUBMATCH_GUESSES_MULTI_CHAR","MIN_YEAR_SPACE","START_UPPER","END_UPPER","ALL_UPPER","ALL_UPPER_INVERTED","ALL_LOWER","ALL_LOWER_INVERTED","ONE_LOWER","ONE_UPPER","ALPHA_INVERTED","ALL_DIGIT","REFERENCE_YEAR","Date","getFullYear","REGEXEN","recentYear","SEPERATOR_CHARS","SEPERATOR_CHAR_COUNT","length"],"sources":["C:/Users/lucas/OneDrive/Documentos/GitHub/CBLXToolPFP/frontend/node_modules/@zxcvbn-ts/core/dist/data/const.esm.js"],"sourcesContent":["import dateSplits from './dateSplits.esm.js';\r\n\r\nconst DATE_MAX_YEAR = 2050;\r\nconst DATE_MIN_YEAR = 1000;\r\nconst DATE_SPLITS = dateSplits;\r\nconst BRUTEFORCE_CARDINALITY = 10;\r\nconst MIN_GUESSES_BEFORE_GROWING_SEQUENCE = 10000;\r\nconst MIN_SUBMATCH_GUESSES_SINGLE_CHAR = 10;\r\nconst MIN_SUBMATCH_GUESSES_MULTI_CHAR = 50;\r\nconst MIN_YEAR_SPACE = 20;\r\n// \\xbf-\\xdf is a range for almost all special uppercase letter like Ä and so on\r\nconst START_UPPER = /^[A-Z\\xbf-\\xdf][^A-Z\\xbf-\\xdf]+$/;\r\nconst END_UPPER = /^[^A-Z\\xbf-\\xdf]+[A-Z\\xbf-\\xdf]$/;\r\n// \\xdf-\\xff is a range for almost all special lowercase letter like ä and so on\r\nconst ALL_UPPER = /^[A-Z\\xbf-\\xdf]+$/;\r\nconst ALL_UPPER_INVERTED = /^[^a-z\\xdf-\\xff]+$/;\r\nconst ALL_LOWER = /^[a-z\\xdf-\\xff]+$/;\r\nconst ALL_LOWER_INVERTED = /^[^A-Z\\xbf-\\xdf]+$/;\r\nconst ONE_LOWER = /[a-z\\xdf-\\xff]/;\r\nconst ONE_UPPER = /[A-Z\\xbf-\\xdf]/;\r\nconst ALPHA_INVERTED = /[^A-Za-z\\xbf-\\xdf]/gi;\r\nconst ALL_DIGIT = /^\\d+$/;\r\nconst REFERENCE_YEAR = new Date().getFullYear();\r\nconst REGEXEN = {\r\n  recentYear: /19\\d\\d|200\\d|201\\d|202\\d/g\r\n};\r\n/* Separators */\r\nconst SEPERATOR_CHARS = [' ', ',', ';', ':', '|', '/', '\\\\', '_', '.', '-'];\r\nconst SEPERATOR_CHAR_COUNT = SEPERATOR_CHARS.length;\r\n\r\nexport { ALL_DIGIT, ALL_LOWER, ALL_LOWER_INVERTED, ALL_UPPER, ALL_UPPER_INVERTED, ALPHA_INVERTED, BRUTEFORCE_CARDINALITY, DATE_MAX_YEAR, DATE_MIN_YEAR, DATE_SPLITS, END_UPPER, MIN_GUESSES_BEFORE_GROWING_SEQUENCE, MIN_SUBMATCH_GUESSES_MULTI_CHAR, MIN_SUBMATCH_GUESSES_SINGLE_CHAR, MIN_YEAR_SPACE, ONE_LOWER, ONE_UPPER, REFERENCE_YEAR, REGEXEN, SEPERATOR_CHARS, SEPERATOR_CHAR_COUNT, START_UPPER };\r\n\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,qBAAqB;AAE5C,MAAMC,aAAa,GAAG,IAAI;AAC1B,MAAMC,aAAa,GAAG,IAAI;AAC1B,MAAMC,WAAW,GAAGH,UAAU;AAC9B,MAAMI,sBAAsB,GAAG,EAAE;AACjC,MAAMC,mCAAmC,GAAG,KAAK;AACjD,MAAMC,gCAAgC,GAAG,EAAE;AAC3C,MAAMC,+BAA+B,GAAG,EAAE;AAC1C,MAAMC,cAAc,GAAG,EAAE;AACzB;AACA,MAAMC,WAAW,GAAG,kCAAkC;AACtD,MAAMC,SAAS,GAAG,kCAAkC;AACpD;AACA,MAAMC,SAAS,GAAG,mBAAmB;AACrC,MAAMC,kBAAkB,GAAG,oBAAoB;AAC/C,MAAMC,SAAS,GAAG,mBAAmB;AACrC,MAAMC,kBAAkB,GAAG,oBAAoB;AAC/C,MAAMC,SAAS,GAAG,gBAAgB;AAClC,MAAMC,SAAS,GAAG,gBAAgB;AAClC,MAAMC,cAAc,GAAG,sBAAsB;AAC7C,MAAMC,SAAS,GAAG,OAAO;AACzB,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;AAC/C,MAAMC,OAAO,GAAG;EACdC,UAAU,EAAE;AACd,CAAC;AACD;AACA,MAAMC,eAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAC3E,MAAMC,oBAAoB,GAAGD,eAAe,CAACE,MAAM;AAEnD,SAASR,SAAS,EAAEL,SAAS,EAAEC,kBAAkB,EAAEH,SAAS,EAAEC,kBAAkB,EAAEK,cAAc,EAAEb,sBAAsB,EAAEH,aAAa,EAAEC,aAAa,EAAEC,WAAW,EAAEO,SAAS,EAAEL,mCAAmC,EAAEE,+BAA+B,EAAED,gCAAgC,EAAEE,cAAc,EAAEO,SAAS,EAAEC,SAAS,EAAEG,cAAc,EAAEG,OAAO,EAAEE,eAAe,EAAEC,oBAAoB,EAAEhB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
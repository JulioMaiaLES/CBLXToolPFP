{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class ScrollToDirective {\n  constructor(router) {\n    this.router = router;\n    this.scrollTo = '';\n  }\n  onClick() {\n    if (this.scrollToRouter && this.scrollToRouter !== this.router.url) {\n      this.router.navigate([this.scrollToRouter]).then(() => {\n        const element = document.querySelector('#' + this.scrollTo);\n        setTimeout(() => {\n          if (element) {\n            element.scrollIntoView({\n              behavior: 'smooth'\n            });\n          }\n        }, 650);\n      });\n      return;\n    }\n    const element = document.querySelector('#' + this.scrollTo);\n    if (element) {\n      element.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ScrollToDirective_Factory(t) {\n    return new (t || ScrollToDirective)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ScrollToDirective,\n    selectors: [[\"\", \"scrollTo\", \"\"]],\n    hostBindings: function ScrollToDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function ScrollToDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n    },\n    inputs: {\n      scrollTo: \"scrollTo\",\n      scrollToRouter: \"scrollToRouter\"\n    }\n  });\n}","map":{"version":3,"names":["ScrollToDirective","constructor","router","scrollTo","onClick","scrollToRouter","url","navigate","then","element","document","querySelector","setTimeout","scrollIntoView","behavior","_","i0","ɵɵdirectiveInject","i1","Router","_2","selectors","hostBindings","ScrollToDirective_HostBindings","rf","ctx"],"sources":["C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\CBLXToolPFP\\frontend\\src\\app\\directives\\scroll-to.directive.ts"],"sourcesContent":["import { Directive, HostListener, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Directive({\r\n  selector: '[scrollTo]',\r\n})\r\nexport class ScrollToDirective {\r\n  @Input() scrollTo = '';\r\n  @Input() scrollToRouter: string | undefined;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  @HostListener('click') onClick() {\r\n    if (this.scrollToRouter && this.scrollToRouter !== this.router.url) {\r\n      this.router.navigate([this.scrollToRouter]).then(() => {\r\n        const element = document.querySelector('#' + this.scrollTo);\r\n        setTimeout(() => {\r\n          if (element) {\r\n            element.scrollIntoView({ behavior: 'smooth' });\r\n          }\r\n        }, 650);\r\n      });\r\n      return;\r\n    }\r\n\r\n    const element = document.querySelector('#' + this.scrollTo);\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;AAMA,OAAM,MAAOA,iBAAiB;EAI5BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAHjB,KAAAC,QAAQ,GAAG,EAAE;EAGe;EAEdC,OAAOA,CAAA;IAC5B,IAAI,IAAI,CAACC,cAAc,IAAI,IAAI,CAACA,cAAc,KAAK,IAAI,CAACH,MAAM,CAACI,GAAG,EAAE;MAClE,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,IAAI,CAACF,cAAc,CAAC,CAAC,CAACG,IAAI,CAAC,MAAK;QACpD,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,GAAG,IAAI,CAACR,QAAQ,CAAC;QAC3DS,UAAU,CAAC,MAAK;UACd,IAAIH,OAAO,EAAE;YACXA,OAAO,CAACI,cAAc,CAAC;cAAEC,QAAQ,EAAE;YAAQ,CAAE,CAAC;;QAElD,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,CAAC;MACF;;IAGF,MAAML,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,GAAG,IAAI,CAACR,QAAQ,CAAC;IAC3D,IAAIM,OAAO,EAAE;MACXA,OAAO,CAACI,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAQ,CAAE,CAAC;;EAElD;EAAC,QAAAC,CAAA,G;qBAvBUf,iBAAiB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBpB,iBAAiB;IAAAqB,SAAA;IAAAC,YAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAAjBC,GAAA,CAAArB,OAAA,EAAS;QAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
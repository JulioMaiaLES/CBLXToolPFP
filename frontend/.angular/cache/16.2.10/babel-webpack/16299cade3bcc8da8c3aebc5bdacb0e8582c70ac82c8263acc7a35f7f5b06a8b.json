{"ast":null,"code":"import { REGEXEN } from '../../data/const.esm.js';\nimport { sorted } from '../../helper.esm.js';\n\n/*\n * -------------------------------------------------------------------------------\n *  regex matching ---------------------------------------------------------------\n * -------------------------------------------------------------------------------\n */\nclass MatchRegex {\n  match({\n    password,\n    regexes = REGEXEN\n  }) {\n    const matches = [];\n    Object.keys(regexes).forEach(name => {\n      const regex = regexes[name];\n      regex.lastIndex = 0; // keeps regexMatch stateless\n      let regexMatch;\n      // eslint-disable-next-line no-cond-assign\n      while (regexMatch = regex.exec(password)) {\n        if (regexMatch) {\n          const token = regexMatch[0];\n          matches.push({\n            pattern: 'regex',\n            token,\n            i: regexMatch.index,\n            j: regexMatch.index + regexMatch[0].length - 1,\n            regexName: name,\n            regexMatch\n          });\n        }\n      }\n    });\n    return sorted(matches);\n  }\n}\nexport { MatchRegex as default };","map":{"version":3,"names":["REGEXEN","sorted","MatchRegex","match","password","regexes","matches","Object","keys","forEach","name","regex","lastIndex","regexMatch","exec","token","push","pattern","i","index","j","length","regexName","default"],"sources":["C:/Users/j-mai/Documents/CBLXToolPFP/frontend/node_modules/@zxcvbn-ts/core/dist/matcher/regex/matching.esm.js"],"sourcesContent":["import { REGEXEN } from '../../data/const.esm.js';\nimport { sorted } from '../../helper.esm.js';\n\n/*\n * -------------------------------------------------------------------------------\n *  regex matching ---------------------------------------------------------------\n * -------------------------------------------------------------------------------\n */\nclass MatchRegex {\n  match({\n    password,\n    regexes = REGEXEN\n  }) {\n    const matches = [];\n    Object.keys(regexes).forEach(name => {\n      const regex = regexes[name];\n      regex.lastIndex = 0; // keeps regexMatch stateless\n      let regexMatch;\n      // eslint-disable-next-line no-cond-assign\n      while (regexMatch = regex.exec(password)) {\n        if (regexMatch) {\n          const token = regexMatch[0];\n          matches.push({\n            pattern: 'regex',\n            token,\n            i: regexMatch.index,\n            j: regexMatch.index + regexMatch[0].length - 1,\n            regexName: name,\n            regexMatch\n          });\n        }\n      }\n    });\n    return sorted(matches);\n  }\n}\n\nexport { MatchRegex as default };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,yBAAyB;AACjD,SAASC,MAAM,QAAQ,qBAAqB;;AAE5C;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,CAAC;EACfC,KAAKA,CAAC;IACJC,QAAQ;IACRC,OAAO,GAAGL;EACZ,CAAC,EAAE;IACD,MAAMM,OAAO,GAAG,EAAE;IAClBC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACI,OAAO,CAACC,IAAI,IAAI;MACnC,MAAMC,KAAK,GAAGN,OAAO,CAACK,IAAI,CAAC;MAC3BC,KAAK,CAACC,SAAS,GAAG,CAAC,CAAC,CAAC;MACrB,IAAIC,UAAU;MACd;MACA,OAAOA,UAAU,GAAGF,KAAK,CAACG,IAAI,CAACV,QAAQ,CAAC,EAAE;QACxC,IAAIS,UAAU,EAAE;UACd,MAAME,KAAK,GAAGF,UAAU,CAAC,CAAC,CAAC;UAC3BP,OAAO,CAACU,IAAI,CAAC;YACXC,OAAO,EAAE,OAAO;YAChBF,KAAK;YACLG,CAAC,EAAEL,UAAU,CAACM,KAAK;YACnBC,CAAC,EAAEP,UAAU,CAACM,KAAK,GAAGN,UAAU,CAAC,CAAC,CAAC,CAACQ,MAAM,GAAG,CAAC;YAC9CC,SAAS,EAAEZ,IAAI;YACfG;UACF,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;IACF,OAAOZ,MAAM,CAACK,OAAO,CAAC;EACxB;AACF;AAEA,SAASJ,UAAU,IAAIqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
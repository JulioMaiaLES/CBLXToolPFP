{"ast":null,"code":"var l33tTableToTrieNode = (l33tTable, triNode) => {\n  Object.entries(l33tTable).forEach(([letter, substitutions]) => {\n    substitutions.forEach(substitution => {\n      triNode.addSub(substitution, letter);\n    });\n  });\n  return triNode;\n};\nexport { l33tTableToTrieNode as default };","map":{"version":3,"names":["l33tTableToTrieNode","l33tTable","triNode","Object","entries","forEach","letter","substitutions","substitution","addSub","default"],"sources":["C:/Users/lucas/OneDrive/Documentos/GitHub/CBLXToolPFP/frontend/node_modules/@zxcvbn-ts/core/dist/matcher/dictionary/variants/matching/unmunger/l33tTableToTrieNode.esm.js"],"sourcesContent":["var l33tTableToTrieNode = ((l33tTable, triNode) => {\r\n  Object.entries(l33tTable).forEach(([letter, substitutions]) => {\r\n    substitutions.forEach(substitution => {\r\n      triNode.addSub(substitution, letter);\r\n    });\r\n  });\r\n  return triNode;\r\n});\r\n\r\nexport { l33tTableToTrieNode as default };\r\n\n"],"mappings":"AAAA,IAAIA,mBAAmB,GAAIA,CAACC,SAAS,EAAEC,OAAO,KAAK;EACjDC,MAAM,CAACC,OAAO,CAACH,SAAS,CAAC,CAACI,OAAO,CAAC,CAAC,CAACC,MAAM,EAAEC,aAAa,CAAC,KAAK;IAC7DA,aAAa,CAACF,OAAO,CAACG,YAAY,IAAI;MACpCN,OAAO,CAACO,MAAM,CAACD,YAAY,EAAEF,MAAM,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOJ,OAAO;AAChB,CAAE;AAEF,SAASF,mBAAmB,IAAIU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
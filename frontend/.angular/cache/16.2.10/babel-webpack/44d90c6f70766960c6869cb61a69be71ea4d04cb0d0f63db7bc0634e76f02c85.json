{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/j-mai/Documents/CBLXToolPFP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Matching from './Matching.esm.js';\nimport scoring from './scoring/index.esm.js';\nimport TimeEstimates from './TimeEstimates.esm.js';\nimport Feedback from './Feedback.esm.js';\nimport { zxcvbnOptions } from './Options.esm.js';\nexport { Options } from './Options.esm.js';\nexport { default as debounce } from './debounce.esm.js';\nconst time = () => new Date().getTime();\nconst createReturnValue = (resolvedMatches, password, start) => {\n  const feedback = new Feedback();\n  const timeEstimates = new TimeEstimates();\n  const matchSequence = scoring.mostGuessableMatchSequence(password, resolvedMatches);\n  const calcTime = time() - start;\n  const attackTimes = timeEstimates.estimateAttackTimes(matchSequence.guesses);\n  return {\n    calcTime,\n    ...matchSequence,\n    ...attackTimes,\n    feedback: feedback.getFeedback(attackTimes.score, matchSequence.sequence)\n  };\n};\nconst main = (password, userInputs) => {\n  if (userInputs) {\n    zxcvbnOptions.extendUserInputsDictionary(userInputs);\n  }\n  const matching = new Matching();\n  return matching.match(password);\n};\nconst zxcvbn = (password, userInputs) => {\n  const start = time();\n  const matches = main(password, userInputs);\n  if (matches instanceof Promise) {\n    throw new Error('You are using a Promised matcher, please use `zxcvbnAsync` for it.');\n  }\n  return createReturnValue(matches, password, start);\n};\nconst zxcvbnAsync = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (password, userInputs) {\n    const usedPassword = password.substring(0, zxcvbnOptions.maxLength);\n    const start = time();\n    const matches = yield main(usedPassword, userInputs);\n    return createReturnValue(matches, usedPassword, start);\n  });\n  return function zxcvbnAsync(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport { zxcvbn, zxcvbnAsync, zxcvbnOptions };","map":{"version":3,"names":["Matching","scoring","TimeEstimates","Feedback","zxcvbnOptions","Options","default","debounce","time","Date","getTime","createReturnValue","resolvedMatches","password","start","feedback","timeEstimates","matchSequence","mostGuessableMatchSequence","calcTime","attackTimes","estimateAttackTimes","guesses","getFeedback","score","sequence","main","userInputs","extendUserInputsDictionary","matching","match","zxcvbn","matches","Promise","Error","zxcvbnAsync","_ref","_asyncToGenerator","usedPassword","substring","maxLength","_x","_x2","apply","arguments"],"sources":["C:/Users/j-mai/Documents/CBLXToolPFP/frontend/node_modules/@zxcvbn-ts/core/dist/index.esm.js"],"sourcesContent":["import Matching from './Matching.esm.js';\nimport scoring from './scoring/index.esm.js';\nimport TimeEstimates from './TimeEstimates.esm.js';\nimport Feedback from './Feedback.esm.js';\nimport { zxcvbnOptions } from './Options.esm.js';\nexport { Options } from './Options.esm.js';\nexport { default as debounce } from './debounce.esm.js';\n\nconst time = () => new Date().getTime();\nconst createReturnValue = (resolvedMatches, password, start) => {\n  const feedback = new Feedback();\n  const timeEstimates = new TimeEstimates();\n  const matchSequence = scoring.mostGuessableMatchSequence(password, resolvedMatches);\n  const calcTime = time() - start;\n  const attackTimes = timeEstimates.estimateAttackTimes(matchSequence.guesses);\n  return {\n    calcTime,\n    ...matchSequence,\n    ...attackTimes,\n    feedback: feedback.getFeedback(attackTimes.score, matchSequence.sequence)\n  };\n};\nconst main = (password, userInputs) => {\n  if (userInputs) {\n    zxcvbnOptions.extendUserInputsDictionary(userInputs);\n  }\n  const matching = new Matching();\n  return matching.match(password);\n};\nconst zxcvbn = (password, userInputs) => {\n  const start = time();\n  const matches = main(password, userInputs);\n  if (matches instanceof Promise) {\n    throw new Error('You are using a Promised matcher, please use `zxcvbnAsync` for it.');\n  }\n  return createReturnValue(matches, password, start);\n};\nconst zxcvbnAsync = async (password, userInputs) => {\n  const usedPassword = password.substring(0, zxcvbnOptions.maxLength);\n  const start = time();\n  const matches = await main(usedPassword, userInputs);\n  return createReturnValue(matches, usedPassword, start);\n};\n\nexport { zxcvbn, zxcvbnAsync, zxcvbnOptions };\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,OAAO,IAAIC,QAAQ,QAAQ,mBAAmB;AAEvD,MAAMC,IAAI,GAAGA,CAAA,KAAM,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;AACvC,MAAMC,iBAAiB,GAAGA,CAACC,eAAe,EAAEC,QAAQ,EAAEC,KAAK,KAAK;EAC9D,MAAMC,QAAQ,GAAG,IAAIZ,QAAQ,CAAC,CAAC;EAC/B,MAAMa,aAAa,GAAG,IAAId,aAAa,CAAC,CAAC;EACzC,MAAMe,aAAa,GAAGhB,OAAO,CAACiB,0BAA0B,CAACL,QAAQ,EAAED,eAAe,CAAC;EACnF,MAAMO,QAAQ,GAAGX,IAAI,CAAC,CAAC,GAAGM,KAAK;EAC/B,MAAMM,WAAW,GAAGJ,aAAa,CAACK,mBAAmB,CAACJ,aAAa,CAACK,OAAO,CAAC;EAC5E,OAAO;IACLH,QAAQ;IACR,GAAGF,aAAa;IAChB,GAAGG,WAAW;IACdL,QAAQ,EAAEA,QAAQ,CAACQ,WAAW,CAACH,WAAW,CAACI,KAAK,EAAEP,aAAa,CAACQ,QAAQ;EAC1E,CAAC;AACH,CAAC;AACD,MAAMC,IAAI,GAAGA,CAACb,QAAQ,EAAEc,UAAU,KAAK;EACrC,IAAIA,UAAU,EAAE;IACdvB,aAAa,CAACwB,0BAA0B,CAACD,UAAU,CAAC;EACtD;EACA,MAAME,QAAQ,GAAG,IAAI7B,QAAQ,CAAC,CAAC;EAC/B,OAAO6B,QAAQ,CAACC,KAAK,CAACjB,QAAQ,CAAC;AACjC,CAAC;AACD,MAAMkB,MAAM,GAAGA,CAAClB,QAAQ,EAAEc,UAAU,KAAK;EACvC,MAAMb,KAAK,GAAGN,IAAI,CAAC,CAAC;EACpB,MAAMwB,OAAO,GAAGN,IAAI,CAACb,QAAQ,EAAEc,UAAU,CAAC;EAC1C,IAAIK,OAAO,YAAYC,OAAO,EAAE;IAC9B,MAAM,IAAIC,KAAK,CAAC,oEAAoE,CAAC;EACvF;EACA,OAAOvB,iBAAiB,CAACqB,OAAO,EAAEnB,QAAQ,EAAEC,KAAK,CAAC;AACpD,CAAC;AACD,MAAMqB,WAAW;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOxB,QAAQ,EAAEc,UAAU,EAAK;IAClD,MAAMW,YAAY,GAAGzB,QAAQ,CAAC0B,SAAS,CAAC,CAAC,EAAEnC,aAAa,CAACoC,SAAS,CAAC;IACnE,MAAM1B,KAAK,GAAGN,IAAI,CAAC,CAAC;IACpB,MAAMwB,OAAO,SAASN,IAAI,CAACY,YAAY,EAAEX,UAAU,CAAC;IACpD,OAAOhB,iBAAiB,CAACqB,OAAO,EAAEM,YAAY,EAAExB,KAAK,CAAC;EACxD,CAAC;EAAA,gBALKqB,WAAWA,CAAAM,EAAA,EAAAC,GAAA;IAAA,OAAAN,IAAA,CAAAO,KAAA,OAAAC,SAAA;EAAA;AAAA,GAKhB;AAED,SAASb,MAAM,EAAEI,WAAW,EAAE/B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { offcanvasTopAnimation, slideInAnimation } from '@animations/route-animation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/storage.service\";\nimport * as i2 from \"@services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../shared/lang-select/lang-select.component\";\nimport * as i7 from \"../shared/page-error/page-error.component\";\nimport * as i8 from \"@ngx-translate/core\";\nconst _c0 = [\"navbar\"];\nfunction NavbarComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"router-outlet\", null, 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(2);\n    i0.ɵɵproperty(\"@routeAnimations\", _r3 && _r3.activatedRouteData);\n  }\n}\nfunction NavbarComponent_page_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"page-error\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"code\", ctx_r2.error);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    scroll: a0\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    \"--navbar-height\": a0\n  };\n};\nconst _c3 = function (a0) {\n  return {\n    active: a0\n  };\n};\nconst _c4 = function (a0) {\n  return {\n    hidden: a0\n  };\n};\nexport class NavbarComponent {\n  constructor(storage, authService) {\n    this.storage = storage;\n    this.authService = authService;\n    this.colapse = 'vertical';\n    this.loading = false;\n    this.error = 0;\n    this.user$ = this.storage.watchUser().pipe(takeUntilDestroyed());\n    this.navbar_hidden = true;\n    this.scroll = false;\n    this.navbar_height = 0;\n  }\n  ngOnInit() {\n    this.onWindowScroll();\n    this.loading = true;\n    this.getMe();\n    this.user$.subscribe({\n      next: () => {\n        this.getMe();\n      }\n    });\n  }\n  getMe() {\n    this.error = 0;\n    this.authService.getMe().subscribe({\n      next: () => {\n        this.loading = false;\n      },\n      error: () => {\n        // ! ⬆ Adicione o parametro error aqui para que o erro seja capturado\n        // this.error = error.status; // ! Descomente esta linha para que o erro seja exibido\n        this.loading = false;\n      }\n    });\n  }\n  logout() {\n    this.authService.logout();\n  }\n  onWindowScroll() {\n    const scroll = window.scrollY;\n    this.scroll = scroll > 200;\n    setTimeout(() => {\n      if (this.navbar) {\n        this.navbar_height = this.navbar.nativeElement.offsetHeight;\n      }\n    }, 300);\n  }\n  static #_ = this.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"app-navbar\"]],\n    viewQuery: function NavbarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navbar = _t.first);\n      }\n    },\n    hostBindings: function NavbarComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"scroll\", function NavbarComponent_scroll_HostBindingHandler($event) {\n          return ctx.onWindowScroll($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      colapse: \"colapse\"\n    },\n    decls: 22,\n    vars: 27,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"navbar\", \"\"], [1, \"content\"], [\"routerLink\", \"/\", 1, \"logo\"], [\"src\", \"../../../assets/images/mini-logo.png\", \"alt\", \"logo\"], [1, \"hamburger\", 3, \"ngClass\"], [\"aria-label\", \"menu\", \"mat-icon-button\", \"\", 3, \"click\"], [1, \"line\"], [3, \"ngClass\"], [\"mat-button\", \"\", \"routerLink\", \"/\"], [\"mat-button\", \"\", \"routerLink\", \"/about\"], [\"mat-button\", \"\", \"routerLink\", \"/contact\"], [4, \"ngIf\"], [3, \"code\", 4, \"ngIf\"], [\"outlet\", \"outlet\"], [3, \"code\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0, 1)(2, \"div\", 2)(3, \"a\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵtext(5, \" CBLXTool \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_7_listener() {\n          return ctx.navbar_hidden = !ctx.navbar_hidden;\n        });\n        i0.ɵɵelement(8, \"span\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"a\", 9);\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"a\", 10);\n        i0.ɵɵtext(14);\n        i0.ɵɵpipe(15, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"a\", 11);\n        i0.ɵɵtext(17);\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"lang-select\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(20, NavbarComponent_div_20_Template, 3, 1, \"div\", 12);\n        i0.ɵɵtemplate(21, NavbarComponent_page_error_21_Template, 1, 1, \"page-error\", 13);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@offcanvasTopAnimation\", undefined)(\"ngClass\", i0.ɵɵpureFunction1(19, _c1, ctx.scroll))(\"ngStyle\", i0.ɵɵpureFunction1(21, _c2, ctx.navbar_height + \"px\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c3, !ctx.navbar_hidden));\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassMapInterpolate1(\"menu \", ctx.colapse, \"\");\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c4, ctx.navbar_hidden));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 13, \"navbar.home\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(15, 15, \"navbar.about\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(18, 17, \"navbar.contact\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error && !ctx.loading);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i3.NgStyle, i4.MatAnchor, i4.MatIconButton, i5.RouterOutlet, i5.RouterLink, i6.LangSelectComponent, i7.PageErrorComponent, i8.TranslatePipe],\n    styles: [\"@charset \\\"UTF-8\\\";\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nnav[_ngcontent-%COMP%] {\\n  --navbar_padding: var(--navbar-top-padding);\\n  --navbar_bg: var(--main-color);\\n  --navbar_color: rgb(255, 255, 255);\\n  z-index: 2;\\n  transition: var(--ts);\\n  width: 100%;\\n  padding: var(--navbar_padding);\\n  background-color: var(--main-color);\\n  position: var(--navbar-position, auto);\\n}\\nnav.scroll[_ngcontent-%COMP%] {\\n  --navbar_padding: var(--navbar-scroll-padding, --navbar-top-padding);\\n  --navbar_bg: var(--main-color);\\n  --navbar_color: rgb(255, 255, 255);\\n}\\nnav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%] {\\n  max-width: var(--navbar-max-width);\\n  margin: 0 auto;\\n  width: 100%;\\n  display: flex;\\n  flex-wrap: inherit;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n@media (max-width: 768px) {\\n  nav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%] {\\n    flex-wrap: wrap;\\n  }\\n}\\nnav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%] {\\n  grid-area: logo;\\n  display: flex;\\n  gap: 10px;\\n  align-items: center;\\n  color: rgb(255, 255, 255);\\n  text-decoration: none;\\n  font-weight: 500;\\n  font-size: 1.2rem !important;\\n}\\nnav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  height: var(--navbar-logo-height);\\n}\\nnav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%] {\\n  transition: all 0.2s;\\n  grid-area: menu;\\n  overflow: hidden;\\n  display: flex;\\n  align-items: center;\\n}\\n@media (max-width: 768px) {\\n  nav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%] {\\n    transition: var(--ts);\\n    transition-duration: 0.5s;\\n    transition-delay: 0.1s;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    flex-basis: 100%;\\n    flex-grow: 1;\\n    flex-wrap: wrap;\\n    position: absolute;\\n    width: 100%;\\n    background-color: var(--main-color);\\n    z-index: -1;\\n    opacity: 1;\\n  }\\n  nav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .menu.vertical[_ngcontent-%COMP%] {\\n    top: var(--navbar-height, 0);\\n    left: 0;\\n  }\\n  nav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .menu.vertical.hidden[_ngcontent-%COMP%] {\\n    top: -50vh;\\n    opacity: 0;\\n  }\\n  nav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .menu.horizontal[_ngcontent-%COMP%] {\\n    justify-content: flex-start;\\n    align-items: flex-start;\\n    padding-top: var(--navbar-height, 0);\\n    height: 100vh;\\n    top: 0;\\n    left: 0;\\n    z-index: 1;\\n  }\\n  nav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .menu.horizontal.hidden[_ngcontent-%COMP%] {\\n    left: -100vw;\\n    opacity: 0;\\n  }\\n  nav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .menu.hidden[_ngcontent-%COMP%] {\\n    opacity: 0;\\n  }\\n}\\nnav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], nav[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  color: rgb(255, 255, 255);\\n}\\n\\n.hamburger[_ngcontent-%COMP%] {\\n  grid-area: hamburger;\\n  display: none;\\n  z-index: 3;\\n}\\n@media (max-width: 768px) {\\n  .hamburger[_ngcontent-%COMP%] {\\n    display: block;\\n  }\\n}\\n.hamburger[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n}\\n.hamburger[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%] {\\n  background-color: var(--navbar_color);\\n  width: 25px;\\n  height: 3px;\\n  border-radius: 5px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  transition: var(--ts);\\n}\\n.hamburger[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]::before, .hamburger[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]::after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  width: 25px;\\n  height: 3px;\\n  border-radius: 10px;\\n  background-color: var(--main-color);\\n  transition: var(--ts);\\n}\\n.hamburger[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]::before {\\n  transform: translateY(-10px);\\n}\\n.hamburger[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]::after {\\n  transform: translateY(10px);\\n}\\n.hamburger.active[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  transform: rotate(180deg);\\n}\\n.hamburger.active[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]::before, .hamburger.active[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]::after {\\n  background-color: var(--main-color);\\n  width: 25px;\\n}\\n.hamburger.active[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]::before {\\n  transform: rotate(45deg);\\n}\\n.hamburger.active[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]::after {\\n  transform: rotate(-45deg);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\n    data: {\n      animation: [slideInAnimation, offcanvasTopAnimation]\n    }\n  });\n}","map":{"version":3,"names":["takeUntilDestroyed","offcanvasTopAnimation","slideInAnimation","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵproperty","_r3","activatedRouteData","ctx_r2","error","NavbarComponent","constructor","storage","authService","colapse","loading","user$","watchUser","pipe","navbar_hidden","scroll","navbar_height","ngOnInit","onWindowScroll","getMe","subscribe","next","logout","window","scrollY","setTimeout","navbar","nativeElement","offsetHeight","_","ɵɵdirectiveInject","i1","StorageService","i2","AuthService","_2","selectors","viewQuery","NavbarComponent_Query","rf","ctx","$event","ɵɵresolveWindow","ɵɵtext","ɵɵlistener","NavbarComponent_Template_button_click_7_listener","ɵɵtemplate","NavbarComponent_div_20_Template","NavbarComponent_page_error_21_Template","undefined","ɵɵpureFunction1","_c1","_c2","ɵɵadvance","_c3","ɵɵclassMapInterpolate1","_c4","ɵɵtextInterpolate","ɵɵpipeBind1"],"sources":["C:\\Users\\Julio\\Documents\\Projects\\CBLXToolPFP\\frontend\\src\\app\\components\\navbar\\navbar.component.ts","C:\\Users\\Julio\\Documents\\Projects\\CBLXToolPFP\\frontend\\src\\app\\components\\navbar\\navbar.component.html"],"sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport {\r\n  offcanvasTopAnimation,\r\n  slideInAnimation,\r\n} from '@animations/route-animation';\r\nimport { AuthService } from '@services/auth.service';\r\nimport { StorageService } from '@services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss'],\r\n  animations: [slideInAnimation, offcanvasTopAnimation],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  @Input() colapse: 'vertical' | 'horizontal' = 'vertical';\r\n  @ViewChild('navbar') navbar: ElementRef<HTMLElement> | undefined;\r\n\r\n  constructor(\r\n    private storage: StorageService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  loading = false;\r\n  error = 0;\r\n\r\n  user$ = this.storage.watchUser().pipe(takeUntilDestroyed());\r\n\r\n  navbar_hidden = true;\r\n  scroll = false;\r\n  navbar_height = 0;\r\n\r\n  ngOnInit(): void {\r\n    this.onWindowScroll();\r\n    this.loading = true;\r\n    this.getMe();\r\n\r\n    this.user$.subscribe({\r\n      next: () => {\r\n        this.getMe();\r\n      },\r\n    });\r\n  }\r\n\r\n  getMe() {\r\n    this.error = 0;\r\n    this.authService.getMe().subscribe({\r\n      next: () => {\r\n        this.loading = false;\r\n      },\r\n      error: () => {\r\n        // ! ⬆ Adicione o parametro error aqui para que o erro seja capturado\r\n        // this.error = error.status; // ! Descomente esta linha para que o erro seja exibido\r\n        this.loading = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  @HostListener('window:scroll', ['$event'])\r\n  onWindowScroll() {\r\n    const scroll = window.scrollY;\r\n    this.scroll = scroll > 200;\r\n\r\n    setTimeout(() => {\r\n      if (this.navbar) {\r\n        this.navbar_height = this.navbar.nativeElement.offsetHeight;\r\n      }\r\n    }, 300);\r\n  }\r\n}\r\n","<nav\r\n  [@offcanvasTopAnimation]\r\n  #navbar\r\n  [ngClass]=\"{ scroll }\"\r\n  [ngStyle]=\"{ '--navbar-height': navbar_height + 'px' }\"\r\n>\r\n  <div class=\"content\">\r\n    <a class=\"logo\" routerLink=\"/\">\r\n      <img src=\"../../../assets/images/mini-logo.png\" alt=\"logo\" />\r\n      CBLXTool\r\n    </a>\r\n\r\n    <div class=\"hamburger\" [ngClass]=\"{ active: !navbar_hidden }\">\r\n      <button\r\n        aria-label=\"menu\"\r\n        mat-icon-button\r\n        (click)=\"navbar_hidden = !navbar_hidden\"\r\n      >\r\n        <span class=\"line\"></span>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"menu {{ colapse }}\" [ngClass]=\"{ hidden: navbar_hidden }\">\r\n      <a mat-button routerLink=\"/\">{{ 'navbar.home' | translate }}</a>\r\n      <a mat-button routerLink=\"/about\">{{ 'navbar.about' | translate }}</a>\r\n      <a mat-button routerLink=\"/contact\">{{ 'navbar.contact' | translate }}</a>\r\n      <lang-select></lang-select>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n<div\r\n  [@routeAnimations]=\"outlet && outlet.activatedRouteData\"\r\n  *ngIf=\"!loading && !error\"\r\n>\r\n  <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>\r\n\r\n<page-error [code]=\"error\" *ngIf=\"error && !loading\"></page-error>\r\n"],"mappings":"AAQA,SAASA,kBAAkB,QAAQ,4BAA4B;AAC/D,SACEC,qBAAqB,EACrBC,gBAAgB,QACX,6BAA6B;;;;;;;;;;;;;ICmBpCC,EAAA,CAAAC,cAAA,UAGC;IACCD,EAAA,CAAAE,SAAA,8BAAgD;IAClDF,EAAA,CAAAG,YAAA,EAAM;;;;IAJJH,EAAA,CAAAI,UAAA,qBAAAC,GAAA,IAAAA,GAAA,CAAAC,kBAAA,CAAwD;;;;;IAM1DN,EAAA,CAAAE,SAAA,qBAAkE;;;;IAAtDF,EAAA,CAAAI,UAAA,SAAAG,MAAA,CAAAC,KAAA,CAAc;;;;;;;;;;;;;;;;;;;;;;;ADhB1B,OAAM,MAAOC,eAAe;EAI1BC,YACUC,OAAuB,EACvBC,WAAwB;IADxB,KAAAD,OAAO,GAAPA,OAAO;IACP,KAAAC,WAAW,GAAXA,WAAW;IALZ,KAAAC,OAAO,GAA8B,UAAU;IAQxD,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAN,KAAK,GAAG,CAAC;IAET,KAAAO,KAAK,GAAG,IAAI,CAACJ,OAAO,CAACK,SAAS,EAAE,CAACC,IAAI,CAACpB,kBAAkB,EAAE,CAAC;IAE3D,KAAAqB,aAAa,GAAG,IAAI;IACpB,KAAAC,MAAM,GAAG,KAAK;IACd,KAAAC,aAAa,GAAG,CAAC;EATd;EAWHC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACR,OAAO,GAAG,IAAI;IACnB,IAAI,CAACS,KAAK,EAAE;IAEZ,IAAI,CAACR,KAAK,CAACS,SAAS,CAAC;MACnBC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACF,KAAK,EAAE;MACd;KACD,CAAC;EACJ;EAEAA,KAAKA,CAAA;IACH,IAAI,CAACf,KAAK,GAAG,CAAC;IACd,IAAI,CAACI,WAAW,CAACW,KAAK,EAAE,CAACC,SAAS,CAAC;MACjCC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACX,OAAO,GAAG,KAAK;MACtB,CAAC;MACDN,KAAK,EAAEA,CAAA,KAAK;QACV;QACA;QACA,IAAI,CAACM,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEAY,MAAMA,CAAA;IACJ,IAAI,CAACd,WAAW,CAACc,MAAM,EAAE;EAC3B;EAGAJ,cAAcA,CAAA;IACZ,MAAMH,MAAM,GAAGQ,MAAM,CAACC,OAAO;IAC7B,IAAI,CAACT,MAAM,GAAGA,MAAM,GAAG,GAAG;IAE1BU,UAAU,CAAC,MAAK;MACd,IAAI,IAAI,CAACC,MAAM,EAAE;QACf,IAAI,CAACV,aAAa,GAAG,IAAI,CAACU,MAAM,CAACC,aAAa,CAACC,YAAY;;IAE/D,CAAC,EAAE,GAAG,CAAC;EACT;EAAC,QAAAC,CAAA,G;qBA1DUxB,eAAe,EAAAT,EAAA,CAAAkC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAApC,EAAA,CAAAkC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAf9B,eAAe;IAAA+B,SAAA;IAAAC,SAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;iBAAfC,GAAA,CAAAtB,cAAA,CAAAuB,MAAA,CAAsB;QAAA,UAAA7C,EAAA,CAAA8C,eAAA;;;;;;;;;;;QCtBnC9C,EAAA,CAAAC,cAAA,gBAKC;QAGKD,EAAA,CAAAE,SAAA,aAA6D;QAC7DF,EAAA,CAAA+C,MAAA,iBACF;QAAA/C,EAAA,CAAAG,YAAA,EAAI;QAEJH,EAAA,CAAAC,cAAA,aAA8D;QAI1DD,EAAA,CAAAgD,UAAA,mBAAAC,iDAAA;UAAA,OAAAL,GAAA,CAAA1B,aAAA,IAAA0B,GAAA,CAAA1B,aAAA;QAAA,EAAwC;QAExClB,EAAA,CAAAE,SAAA,cAA0B;QAC5BF,EAAA,CAAAG,YAAA,EAAS;QAGXH,EAAA,CAAAC,cAAA,aAAsE;QACvCD,EAAA,CAAA+C,MAAA,IAA+B;;QAAA/C,EAAA,CAAAG,YAAA,EAAI;QAChEH,EAAA,CAAAC,cAAA,aAAkC;QAAAD,EAAA,CAAA+C,MAAA,IAAgC;;QAAA/C,EAAA,CAAAG,YAAA,EAAI;QACtEH,EAAA,CAAAC,cAAA,aAAoC;QAAAD,EAAA,CAAA+C,MAAA,IAAkC;;QAAA/C,EAAA,CAAAG,YAAA,EAAI;QAC1EH,EAAA,CAAAE,SAAA,mBAA2B;QAC7BF,EAAA,CAAAG,YAAA,EAAM;QAIVH,EAAA,CAAAkD,UAAA,KAAAC,+BAAA,kBAKM;QAENnD,EAAA,CAAAkD,UAAA,KAAAE,sCAAA,yBAAkE;;;QArChEpD,EAAA,CAAAI,UAAA,2BAAAiD,SAAA,CAAwB,YAAArD,EAAA,CAAAsD,eAAA,KAAAC,GAAA,EAAAX,GAAA,CAAAzB,MAAA,cAAAnB,EAAA,CAAAsD,eAAA,KAAAE,GAAA,EAAAZ,GAAA,CAAAxB,aAAA;QAWCpB,EAAA,CAAAyD,SAAA,GAAsC;QAAtCzD,EAAA,CAAAI,UAAA,YAAAJ,EAAA,CAAAsD,eAAA,KAAAI,GAAA,GAAAd,GAAA,CAAA1B,aAAA,EAAsC;QAUxDlB,EAAA,CAAAyD,SAAA,GAA0B;QAA1BzD,EAAA,CAAA2D,sBAAA,UAAAf,GAAA,CAAA/B,OAAA,KAA0B;QAACb,EAAA,CAAAI,UAAA,YAAAJ,EAAA,CAAAsD,eAAA,KAAAM,GAAA,EAAAhB,GAAA,CAAA1B,aAAA,EAAqC;QACtClB,EAAA,CAAAyD,SAAA,GAA+B;QAA/BzD,EAAA,CAAA6D,iBAAA,CAAA7D,EAAA,CAAA8D,WAAA,wBAA+B;QAC1B9D,EAAA,CAAAyD,SAAA,GAAgC;QAAhCzD,EAAA,CAAA6D,iBAAA,CAAA7D,EAAA,CAAA8D,WAAA,yBAAgC;QAC9B9D,EAAA,CAAAyD,SAAA,GAAkC;QAAlCzD,EAAA,CAAA6D,iBAAA,CAAA7D,EAAA,CAAA8D,WAAA,2BAAkC;QAQzE9D,EAAA,CAAAyD,SAAA,GAAwB;QAAxBzD,EAAA,CAAAI,UAAA,UAAAwC,GAAA,CAAA9B,OAAA,KAAA8B,GAAA,CAAApC,KAAA,CAAwB;QAKCR,EAAA,CAAAyD,SAAA,GAAuB;QAAvBzD,EAAA,CAAAI,UAAA,SAAAwC,GAAA,CAAApC,KAAA,KAAAoC,GAAA,CAAA9B,OAAA,CAAuB;;;;;;iBDlBrC,CAACf,gBAAgB,EAAED,qBAAqB;IAAC;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ProgressService {\n  constructor() {\n    this.engageProgress = 0;\n    this.investigateProgress = 0;\n    this.actProgress = 0;\n    this.answeredQuestions = 0;\n    this.totalQuestions = 0;\n    this.totalUploads = 0;\n  }\n  updateEngageProgress(answeredQuestions, totalQuestions) {\n    this.answeredQuestions += answeredQuestions;\n    this.totalQuestions += totalQuestions;\n    this.engageProgress = this.calculateProgress(this.answeredQuestions, this.totalQuestions);\n  }\n  updateInvestigateProgress(answeredQuestions, totalQuestions) {\n    this.answeredQuestions += answeredQuestions;\n    this.totalQuestions += totalQuestions;\n    this.investigateProgress = this.calculateProgress(this.answeredQuestions, this.totalQuestions);\n  }\n  updateActProgress(uploads) {\n    this.totalUploads += uploads;\n  }\n  calculateProgress(answeredQuestions, totalQuestions) {\n    return Math.round(answeredQuestions / totalQuestions * 100);\n  }\n  static #_ = this.ɵfac = function ProgressService_Factory(t) {\n    return new (t || ProgressService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProgressService,\n    factory: ProgressService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProgressService","constructor","engageProgress","investigateProgress","actProgress","answeredQuestions","totalQuestions","totalUploads","updateEngageProgress","calculateProgress","updateInvestigateProgress","updateActProgress","uploads","Math","round","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\CBLXToolPFP\\frontend\\src\\app\\services\\progress.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgressService {\r\n  engageProgress = 0;\r\n  investigateProgress = 0;\r\n  actProgress = 0;\r\n  answeredQuestions = 0;\r\n  totalQuestions = 0;\r\n  totalUploads = 0;\r\n\r\n  updateEngageProgress(answeredQuestions: number, totalQuestions: number) {\r\n    this.answeredQuestions += answeredQuestions;\r\n    this.totalQuestions += totalQuestions;\r\n    this.engageProgress = this.calculateProgress(this.answeredQuestions, this.totalQuestions);\r\n  }\r\n\r\n  updateInvestigateProgress(answeredQuestions: number, totalQuestions: number) {\r\n    this.answeredQuestions += answeredQuestions;\r\n    this.totalQuestions += totalQuestions;\r\n    this.investigateProgress = this.calculateProgress(this.answeredQuestions, this.totalQuestions);\r\n  }\r\n\r\n  updateActProgress(uploads: number) {\r\n    this.totalUploads += uploads;\r\n  }\r\n\r\n  private calculateProgress(answeredQuestions: number, totalQuestions: number): number {\r\n    return Math.round((answeredQuestions / totalQuestions) * 100);\r\n  }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,eAAe;EAH5BC,YAAA;IAIE,KAAAC,cAAc,GAAG,CAAC;IAClB,KAAAC,mBAAmB,GAAG,CAAC;IACvB,KAAAC,WAAW,GAAG,CAAC;IACf,KAAAC,iBAAiB,GAAG,CAAC;IACrB,KAAAC,cAAc,GAAG,CAAC;IAClB,KAAAC,YAAY,GAAG,CAAC;;EAEhBC,oBAAoBA,CAACH,iBAAyB,EAAEC,cAAsB;IACpE,IAAI,CAACD,iBAAiB,IAAIA,iBAAiB;IAC3C,IAAI,CAACC,cAAc,IAAIA,cAAc;IACrC,IAAI,CAACJ,cAAc,GAAG,IAAI,CAACO,iBAAiB,CAAC,IAAI,CAACJ,iBAAiB,EAAE,IAAI,CAACC,cAAc,CAAC;EAC3F;EAEAI,yBAAyBA,CAACL,iBAAyB,EAAEC,cAAsB;IACzE,IAAI,CAACD,iBAAiB,IAAIA,iBAAiB;IAC3C,IAAI,CAACC,cAAc,IAAIA,cAAc;IACrC,IAAI,CAACH,mBAAmB,GAAG,IAAI,CAACM,iBAAiB,CAAC,IAAI,CAACJ,iBAAiB,EAAE,IAAI,CAACC,cAAc,CAAC;EAChG;EAEAK,iBAAiBA,CAACC,OAAe;IAC/B,IAAI,CAACL,YAAY,IAAIK,OAAO;EAC9B;EAEQH,iBAAiBA,CAACJ,iBAAyB,EAAEC,cAAsB;IACzE,OAAOO,IAAI,CAACC,KAAK,CAAET,iBAAiB,GAAGC,cAAc,GAAI,GAAG,CAAC;EAC/D;EAAC,QAAAS,CAAA,G;qBA1BUf,eAAe;EAAA;EAAA,QAAAgB,EAAA,G;WAAfhB,eAAe;IAAAiB,OAAA,EAAfjB,eAAe,CAAAkB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
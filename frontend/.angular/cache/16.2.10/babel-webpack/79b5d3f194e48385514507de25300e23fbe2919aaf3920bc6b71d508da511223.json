{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class InitialLettersDirective {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.initialLetters = 'Foo Bar';\n    this.length = 2;\n    this.linkingPrepositions = ['de', 'da', 'do', 'das', 'dos', 'e'];\n  }\n  ngOnInit() {\n    this.removeLinkingPrepositions();\n    const initials = this.initialLetters.split(' ').map(word => word[0]);\n    const letters = initials.slice(0, this.length).join('');\n    this.initialLetters = letters.toUpperCase();\n    const span = this.elementRef.nativeElement;\n    span.innerHTML = this.initialLetters;\n  }\n  removeLinkingPrepositions() {\n    this.initialLetters = this.initialLetters.split(' ').filter(word => !this.linkingPrepositions.includes(word.toLowerCase())).join(' ');\n  }\n  static #_ = this.ɵfac = function InitialLettersDirective_Factory(t) {\n    return new (t || InitialLettersDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: InitialLettersDirective,\n    selectors: [[\"\", \"initialLetters\", \"\"]],\n    inputs: {\n      initialLetters: \"initialLetters\",\n      length: \"length\"\n    }\n  });\n}","map":{"version":3,"names":["InitialLettersDirective","constructor","elementRef","initialLetters","length","linkingPrepositions","ngOnInit","removeLinkingPrepositions","initials","split","map","word","letters","slice","join","toUpperCase","span","nativeElement","innerHTML","filter","includes","toLowerCase","_","i0","ɵɵdirectiveInject","ElementRef","_2","selectors","inputs"],"sources":["C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\CBLXToolPFP\\frontend\\src\\app\\directives\\initial-letters.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[initialLetters]',\r\n})\r\nexport class InitialLettersDirective implements OnInit {\r\n  @Input() initialLetters = 'Foo Bar';\r\n  @Input() length = 2;\r\n\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  linkingPrepositions = ['de', 'da', 'do', 'das', 'dos', 'e'];\r\n\r\n  ngOnInit() {\r\n    this.removeLinkingPrepositions();\r\n    const initials = this.initialLetters.split(' ').map((word) => word[0]);\r\n    const letters = initials.slice(0, this.length).join('');\r\n    this.initialLetters = letters.toUpperCase();\r\n    const span = this.elementRef.nativeElement;\r\n    span.innerHTML = this.initialLetters;\r\n  }\r\n\r\n  removeLinkingPrepositions() {\r\n    this.initialLetters = this.initialLetters\r\n      .split(' ')\r\n      .filter((word) => !this.linkingPrepositions.includes(word.toLowerCase()))\r\n      .join(' ');\r\n  }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,uBAAuB;EAIlCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHrB,KAAAC,cAAc,GAAG,SAAS;IAC1B,KAAAC,MAAM,GAAG,CAAC;IAInB,KAAAC,mBAAmB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC;EAFd;EAI7CC,QAAQA,CAAA;IACN,IAAI,CAACC,yBAAyB,EAAE;IAChC,MAAMC,QAAQ,GAAG,IAAI,CAACL,cAAc,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,CAAC;IACtE,MAAMC,OAAO,GAAGJ,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAE,IAAI,CAACT,MAAM,CAAC,CAACU,IAAI,CAAC,EAAE,CAAC;IACvD,IAAI,CAACX,cAAc,GAAGS,OAAO,CAACG,WAAW,EAAE;IAC3C,MAAMC,IAAI,GAAG,IAAI,CAACd,UAAU,CAACe,aAAa;IAC1CD,IAAI,CAACE,SAAS,GAAG,IAAI,CAACf,cAAc;EACtC;EAEAI,yBAAyBA,CAAA;IACvB,IAAI,CAACJ,cAAc,GAAG,IAAI,CAACA,cAAc,CACtCM,KAAK,CAAC,GAAG,CAAC,CACVU,MAAM,CAAER,IAAI,IAAK,CAAC,IAAI,CAACN,mBAAmB,CAACe,QAAQ,CAACT,IAAI,CAACU,WAAW,EAAE,CAAC,CAAC,CACxEP,IAAI,CAAC,GAAG,CAAC;EACd;EAAC,QAAAQ,CAAA,G;qBAtBUtB,uBAAuB,EAAAuB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvB1B,uBAAuB;IAAA2B,SAAA;IAAAC,MAAA;MAAAzB,cAAA;MAAAC,MAAA;IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
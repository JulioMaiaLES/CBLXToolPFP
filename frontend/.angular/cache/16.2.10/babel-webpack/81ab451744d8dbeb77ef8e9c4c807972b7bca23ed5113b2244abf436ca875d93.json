{"ast":null,"code":"import { DIALOG_DATA } from '@angular/cdk/dialog';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./../../../services/auth.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"angular-notifier\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../../shared/loading/loading.component\";\nimport * as i10 from \"@ngx-translate/core\";\nimport * as i11 from \"@pipes/form-error.pipe\";\nfunction ForgotPasswordComponent_loading_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"loading\");\n  }\n}\nexport class ForgotPasswordComponent {\n  constructor(data, fb, authService, dialogRef, notifier) {\n    this.data = data;\n    this.fb = fb;\n    this.authService = authService;\n    this.dialogRef = dialogRef;\n    this.notifier = notifier;\n    this.loading = false;\n    this.form = this.fb.group({\n      email: [this.data.email, [Validators.required, Validators.email]]\n    });\n  }\n  handleFormSubmit() {\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n    this.setLoading(true);\n    this.authService.forgotPassword(this.form.value).subscribe({\n      next: () => {\n        this.setLoading(false);\n        this.notifier.notify('success', 'E-mail enviado com sucesso');\n        this.dialogRef.close();\n      },\n      error: () => {\n        this.setLoading(false);\n      }\n    });\n  }\n  setLoading(value) {\n    this.loading = value;\n    this.dialogRef.disableClose = value;\n  }\n  static #_ = this.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(DIALOG_DATA), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.NotifierService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 25,\n    vars: 24,\n    consts: [[\"matDialogTitle\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"autocomplete\", \"username\"], [\"type\", \"button\", \"mat-button\", \"\", 1, \"alt\", 3, \"mat-dialog-close\"], [\"type\", \"submit\", \"mat-button\", \"\", 1, \"primary\"], [4, \"ngIf\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.handleFormSubmit();\n        });\n        i0.ɵɵelementStart(7, \"mat-dialog-content\")(8, \"mat-form-field\", 2)(9, \"mat-label\");\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 3);\n        i0.ɵɵelementStart(13, \"mat-error\");\n        i0.ɵɵtext(14);\n        i0.ɵɵpipe(15, \"translate\");\n        i0.ɵɵpipe(16, \"formError\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"mat-dialog-actions\")(18, \"button\", 4);\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 5);\n        i0.ɵɵtext(22);\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵtemplate(24, ForgotPasswordComponent_loading_24_Template, 1, 0, \"loading\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 10, \"forgot-password.title\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 12, \"forgot-password.subtitle\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 14, \"forgot-password.email\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(15, 16, i0.ɵɵpipeBind1(16, 18, ctx.form.controls.email.errors)), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵattribute(\"align\", \"end\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mat-dialog-close\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 20, \"global.cancel\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(23, 22, \"global.confirm\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i5.MatButton, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.MatInput, i7.MatFormField, i7.MatLabel, i7.MatError, i8.NgIf, i3.MatDialogClose, i3.MatDialogTitle, i3.MatDialogContent, i3.MatDialogActions, i9.LoadingComponent, i10.TranslatePipe, i11.FormErrorPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["DIALOG_DATA","Validators","i0","ɵɵelement","ForgotPasswordComponent","constructor","data","fb","authService","dialogRef","notifier","loading","form","group","email","required","handleFormSubmit","invalid","markAllAsTouched","setLoading","forgotPassword","value","subscribe","next","notify","close","error","disableClose","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","MatDialogRef","i4","NotifierService","_2","selectors","decls","vars","consts","template","ForgotPasswordComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ForgotPasswordComponent_Template_form_ngSubmit_6_listener","ɵɵtemplate","ForgotPasswordComponent_loading_24_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtextInterpolate","ɵɵproperty","controls","errors","ɵɵattribute"],"sources":["C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\CBLXToolPFP\\frontend\\src\\app\\components\\modals\\forgot-password\\forgot-password.component.ts","C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\CBLXToolPFP\\frontend\\src\\app\\components\\modals\\forgot-password\\forgot-password.component.html"],"sourcesContent":["import { DIALOG_DATA } from '@angular/cdk/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { AuthService } from './../../../services/auth.service';\r\n\r\ninterface Data {\r\n  email: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent {\r\n  constructor(\r\n    @Inject(DIALOG_DATA) private data: Data,\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private dialogRef: MatDialogRef<ForgotPasswordComponent>,\r\n    private notifier: NotifierService\r\n  ) {}\r\n\r\n  loading = false;\r\n  form = this.fb.group({\r\n    email: [this.data.email, [Validators.required, Validators.email]],\r\n  });\r\n\r\n  handleFormSubmit() {\r\n    if (this.form.invalid) {\r\n      this.form.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    this.setLoading(true);\r\n    this.authService.forgotPassword(this.form.value as string).subscribe({\r\n      next: () => {\r\n        this.setLoading(false);\r\n        this.notifier.notify('success', 'E-mail enviado com sucesso');\r\n        this.dialogRef.close();\r\n      },\r\n      error: () => {\r\n        this.setLoading(false);\r\n      },\r\n    });\r\n  }\r\n\r\n  setLoading(value: boolean) {\r\n    this.loading = value;\r\n    this.dialogRef.disableClose = value;\r\n  }\r\n}\r\n","<h1 matDialogTitle\r\n  >{{ 'forgot-password.title' | translate }}\r\n  <p>{{ 'forgot-password.subtitle' | translate }}</p>\r\n</h1>\r\n\r\n<form [formGroup]=\"form\" (ngSubmit)=\"handleFormSubmit()\">\r\n  <mat-dialog-content>\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>{{ 'forgot-password.email' | translate }}</mat-label>\r\n      <input\r\n        matInput\r\n        type=\"email\"\r\n        formControlName=\"email\"\r\n        autocomplete=\"username\"\r\n      />\r\n      <mat-error>\r\n        {{ form.controls.email.errors | formError | translate }}\r\n      </mat-error>\r\n    </mat-form-field>\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions [attr.align]=\"'end'\">\r\n    <button type=\"button\" class=\"alt\" mat-button [mat-dialog-close]=\"false\">\r\n      {{ 'global.cancel' | translate }}\r\n    </button>\r\n    <button type=\"submit\" class=\"primary\" mat-button>\r\n      {{ 'global.confirm' | translate }}\r\n      <loading *ngIf=\"loading\"></loading>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</form>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import scoring from '../../scoring/index.esm.js';\n\n/*\r\n *-------------------------------------------------------------------------------\r\n * repeats (aaa, abcabcabc) ------------------------------\r\n *-------------------------------------------------------------------------------\r\n */\nclass MatchRepeat {\n  // eslint-disable-next-line max-statements\n  match({\n    password,\n    omniMatch\n  }) {\n    const matches = [];\n    let lastIndex = 0;\n    while (lastIndex < password.length) {\n      const greedyMatch = this.getGreedyMatch(password, lastIndex);\n      const lazyMatch = this.getLazyMatch(password, lastIndex);\n      if (greedyMatch == null) {\n        break;\n      }\n      const {\n        match,\n        baseToken\n      } = this.setMatchToken(greedyMatch, lazyMatch);\n      if (match) {\n        const j = match.index + match[0].length - 1;\n        const baseGuesses = this.getBaseGuesses(baseToken, omniMatch);\n        matches.push(this.normalizeMatch(baseToken, j, match, baseGuesses));\n        lastIndex = j + 1;\n      }\n    }\n    const hasPromises = matches.some(match => {\n      return match instanceof Promise;\n    });\n    if (hasPromises) {\n      return Promise.all(matches);\n    }\n    return matches;\n  }\n  // eslint-disable-next-line max-params\n  normalizeMatch(baseToken, j, match, baseGuesses) {\n    const baseMatch = {\n      pattern: 'repeat',\n      i: match.index,\n      j,\n      token: match[0],\n      baseToken,\n      baseGuesses: 0,\n      repeatCount: match[0].length / baseToken.length\n    };\n    if (baseGuesses instanceof Promise) {\n      return baseGuesses.then(resolvedBaseGuesses => {\n        return {\n          ...baseMatch,\n          baseGuesses: resolvedBaseGuesses\n        };\n      });\n    }\n    return {\n      ...baseMatch,\n      baseGuesses\n    };\n  }\n  getGreedyMatch(password, lastIndex) {\n    const greedy = /(.+)\\1+/g;\n    greedy.lastIndex = lastIndex;\n    return greedy.exec(password);\n  }\n  getLazyMatch(password, lastIndex) {\n    const lazy = /(.+?)\\1+/g;\n    lazy.lastIndex = lastIndex;\n    return lazy.exec(password);\n  }\n  setMatchToken(greedyMatch, lazyMatch) {\n    const lazyAnchored = /^(.+?)\\1+$/;\n    let match;\n    let baseToken = '';\n    if (lazyMatch && greedyMatch[0].length > lazyMatch[0].length) {\n      // greedy beats lazy for 'aabaab'\n      // greedy: [aabaab, aab]\n      // lazy:   [aa,     a]\n      match = greedyMatch;\n      // greedy's repeated string might itself be repeated, eg.\n      // aabaab in aabaabaabaab.\n      // run an anchored lazy match on greedy's repeated string\n      // to find the shortest repeated string\n      const temp = lazyAnchored.exec(match[0]);\n      if (temp) {\n        baseToken = temp[1];\n      }\n    } else {\n      // lazy beats greedy for 'aaaaa'\n      // greedy: [aaaa,  aa]\n      // lazy:   [aaaaa, a]\n      match = lazyMatch;\n      if (match) {\n        baseToken = match[1];\n      }\n    }\n    return {\n      match,\n      baseToken\n    };\n  }\n  getBaseGuesses(baseToken, omniMatch) {\n    const matches = omniMatch.match(baseToken);\n    if (matches instanceof Promise) {\n      return matches.then(resolvedMatches => {\n        const baseAnalysis = scoring.mostGuessableMatchSequence(baseToken, resolvedMatches);\n        return baseAnalysis.guesses;\n      });\n    }\n    const baseAnalysis = scoring.mostGuessableMatchSequence(baseToken, matches);\n    return baseAnalysis.guesses;\n  }\n}\nexport { MatchRepeat as default };","map":{"version":3,"names":["scoring","MatchRepeat","match","password","omniMatch","matches","lastIndex","length","greedyMatch","getGreedyMatch","lazyMatch","getLazyMatch","baseToken","setMatchToken","j","index","baseGuesses","getBaseGuesses","push","normalizeMatch","hasPromises","some","Promise","all","baseMatch","pattern","i","token","repeatCount","then","resolvedBaseGuesses","greedy","exec","lazy","lazyAnchored","temp","resolvedMatches","baseAnalysis","mostGuessableMatchSequence","guesses","default"],"sources":["C:/Users/Julio/Documents/Projects/CBLXToolPFP/frontend/node_modules/@zxcvbn-ts/core/dist/matcher/repeat/matching.esm.js"],"sourcesContent":["import scoring from '../../scoring/index.esm.js';\r\n\r\n/*\r\n *-------------------------------------------------------------------------------\r\n * repeats (aaa, abcabcabc) ------------------------------\r\n *-------------------------------------------------------------------------------\r\n */\r\nclass MatchRepeat {\r\n  // eslint-disable-next-line max-statements\r\n  match({\r\n    password,\r\n    omniMatch\r\n  }) {\r\n    const matches = [];\r\n    let lastIndex = 0;\r\n    while (lastIndex < password.length) {\r\n      const greedyMatch = this.getGreedyMatch(password, lastIndex);\r\n      const lazyMatch = this.getLazyMatch(password, lastIndex);\r\n      if (greedyMatch == null) {\r\n        break;\r\n      }\r\n      const {\r\n        match,\r\n        baseToken\r\n      } = this.setMatchToken(greedyMatch, lazyMatch);\r\n      if (match) {\r\n        const j = match.index + match[0].length - 1;\r\n        const baseGuesses = this.getBaseGuesses(baseToken, omniMatch);\r\n        matches.push(this.normalizeMatch(baseToken, j, match, baseGuesses));\r\n        lastIndex = j + 1;\r\n      }\r\n    }\r\n    const hasPromises = matches.some(match => {\r\n      return match instanceof Promise;\r\n    });\r\n    if (hasPromises) {\r\n      return Promise.all(matches);\r\n    }\r\n    return matches;\r\n  }\r\n  // eslint-disable-next-line max-params\r\n  normalizeMatch(baseToken, j, match, baseGuesses) {\r\n    const baseMatch = {\r\n      pattern: 'repeat',\r\n      i: match.index,\r\n      j,\r\n      token: match[0],\r\n      baseToken,\r\n      baseGuesses: 0,\r\n      repeatCount: match[0].length / baseToken.length\r\n    };\r\n    if (baseGuesses instanceof Promise) {\r\n      return baseGuesses.then(resolvedBaseGuesses => {\r\n        return {\r\n          ...baseMatch,\r\n          baseGuesses: resolvedBaseGuesses\r\n        };\r\n      });\r\n    }\r\n    return {\r\n      ...baseMatch,\r\n      baseGuesses\r\n    };\r\n  }\r\n  getGreedyMatch(password, lastIndex) {\r\n    const greedy = /(.+)\\1+/g;\r\n    greedy.lastIndex = lastIndex;\r\n    return greedy.exec(password);\r\n  }\r\n  getLazyMatch(password, lastIndex) {\r\n    const lazy = /(.+?)\\1+/g;\r\n    lazy.lastIndex = lastIndex;\r\n    return lazy.exec(password);\r\n  }\r\n  setMatchToken(greedyMatch, lazyMatch) {\r\n    const lazyAnchored = /^(.+?)\\1+$/;\r\n    let match;\r\n    let baseToken = '';\r\n    if (lazyMatch && greedyMatch[0].length > lazyMatch[0].length) {\r\n      // greedy beats lazy for 'aabaab'\r\n      // greedy: [aabaab, aab]\r\n      // lazy:   [aa,     a]\r\n      match = greedyMatch;\r\n      // greedy's repeated string might itself be repeated, eg.\r\n      // aabaab in aabaabaabaab.\r\n      // run an anchored lazy match on greedy's repeated string\r\n      // to find the shortest repeated string\r\n      const temp = lazyAnchored.exec(match[0]);\r\n      if (temp) {\r\n        baseToken = temp[1];\r\n      }\r\n    } else {\r\n      // lazy beats greedy for 'aaaaa'\r\n      // greedy: [aaaa,  aa]\r\n      // lazy:   [aaaaa, a]\r\n      match = lazyMatch;\r\n      if (match) {\r\n        baseToken = match[1];\r\n      }\r\n    }\r\n    return {\r\n      match,\r\n      baseToken\r\n    };\r\n  }\r\n  getBaseGuesses(baseToken, omniMatch) {\r\n    const matches = omniMatch.match(baseToken);\r\n    if (matches instanceof Promise) {\r\n      return matches.then(resolvedMatches => {\r\n        const baseAnalysis = scoring.mostGuessableMatchSequence(baseToken, resolvedMatches);\r\n        return baseAnalysis.guesses;\r\n      });\r\n    }\r\n    const baseAnalysis = scoring.mostGuessableMatchSequence(baseToken, matches);\r\n    return baseAnalysis.guesses;\r\n  }\r\n}\r\n\r\nexport { MatchRepeat as default };\r\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
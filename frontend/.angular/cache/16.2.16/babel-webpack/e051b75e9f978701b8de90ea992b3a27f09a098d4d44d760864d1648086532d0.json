{"ast":null,"code":"import { MIN_SUBMATCH_GUESSES_SINGLE_CHAR, MIN_SUBMATCH_GUESSES_MULTI_CHAR } from '../data/const.esm.js';\nimport utils from './utils.esm.js';\nimport { zxcvbnOptions } from '../Options.esm.js';\nimport bruteforceMatcher from '../matcher/bruteforce/scoring.esm.js';\nimport dateMatcher from '../matcher/date/scoring.esm.js';\nimport dictionaryMatcher from '../matcher/dictionary/scoring.esm.js';\nimport regexMatcher from '../matcher/regex/scoring.esm.js';\nimport repeatMatcher from '../matcher/repeat/scoring.esm.js';\nimport sequenceMatcher from '../matcher/sequence/scoring.esm.js';\nimport spatialMatcher from '../matcher/spatial/scoring.esm.js';\nimport separatorMatcher from '../matcher/separator/scoring.esm.js';\nconst getMinGuesses = (match, password) => {\n  let minGuesses = 1;\n  if (match.token.length < password.length) {\n    if (match.token.length === 1) {\n      minGuesses = MIN_SUBMATCH_GUESSES_SINGLE_CHAR;\n    } else {\n      minGuesses = MIN_SUBMATCH_GUESSES_MULTI_CHAR;\n    }\n  }\n  return minGuesses;\n};\nconst matchers = {\n  bruteforce: bruteforceMatcher,\n  date: dateMatcher,\n  dictionary: dictionaryMatcher,\n  regex: regexMatcher,\n  repeat: repeatMatcher,\n  sequence: sequenceMatcher,\n  spatial: spatialMatcher,\n  separator: separatorMatcher\n};\nconst getScoring = (name, match) => {\n  if (matchers[name]) {\n    return matchers[name](match);\n  }\n  if (zxcvbnOptions.matchers[name] && 'scoring' in zxcvbnOptions.matchers[name]) {\n    return zxcvbnOptions.matchers[name].scoring(match);\n  }\n  return 0;\n};\n// ------------------------------------------------------------------------------\n// guess estimation -- one function per match pattern ---------------------------\n// ------------------------------------------------------------------------------\n// eslint-disable-next-line complexity, max-statements\nvar estimateGuesses = (match, password) => {\n  const extraData = {};\n  // a match's guess estimate doesn't change. cache it.\n  if ('guesses' in match && match.guesses != null) {\n    return match;\n  }\n  const minGuesses = getMinGuesses(match, password);\n  const estimationResult = getScoring(match.pattern, match);\n  let guesses = 0;\n  if (typeof estimationResult === 'number') {\n    guesses = estimationResult;\n  } else if (match.pattern === 'dictionary') {\n    guesses = estimationResult.calculation;\n    extraData.baseGuesses = estimationResult.baseGuesses;\n    extraData.uppercaseVariations = estimationResult.uppercaseVariations;\n    extraData.l33tVariations = estimationResult.l33tVariations;\n  }\n  const matchGuesses = Math.max(guesses, minGuesses);\n  return {\n    ...match,\n    ...extraData,\n    guesses: matchGuesses,\n    guessesLog10: utils.log10(matchGuesses)\n  };\n};\nexport { estimateGuesses as default };","map":{"version":3,"names":["MIN_SUBMATCH_GUESSES_SINGLE_CHAR","MIN_SUBMATCH_GUESSES_MULTI_CHAR","utils","zxcvbnOptions","bruteforceMatcher","dateMatcher","dictionaryMatcher","regexMatcher","repeatMatcher","sequenceMatcher","spatialMatcher","separatorMatcher","getMinGuesses","match","password","minGuesses","token","length","matchers","bruteforce","date","dictionary","regex","repeat","sequence","spatial","separator","getScoring","name","scoring","estimateGuesses","extraData","guesses","estimationResult","pattern","calculation","baseGuesses","uppercaseVariations","l33tVariations","matchGuesses","Math","max","guessesLog10","log10","default"],"sources":["C:/Users/j-mai/Documents/CBLXToolPFP/frontend/node_modules/@zxcvbn-ts/core/dist/scoring/estimate.esm.js"],"sourcesContent":["import { MIN_SUBMATCH_GUESSES_SINGLE_CHAR, MIN_SUBMATCH_GUESSES_MULTI_CHAR } from '../data/const.esm.js';\nimport utils from './utils.esm.js';\nimport { zxcvbnOptions } from '../Options.esm.js';\nimport bruteforceMatcher from '../matcher/bruteforce/scoring.esm.js';\nimport dateMatcher from '../matcher/date/scoring.esm.js';\nimport dictionaryMatcher from '../matcher/dictionary/scoring.esm.js';\nimport regexMatcher from '../matcher/regex/scoring.esm.js';\nimport repeatMatcher from '../matcher/repeat/scoring.esm.js';\nimport sequenceMatcher from '../matcher/sequence/scoring.esm.js';\nimport spatialMatcher from '../matcher/spatial/scoring.esm.js';\nimport separatorMatcher from '../matcher/separator/scoring.esm.js';\n\nconst getMinGuesses = (match, password) => {\n  let minGuesses = 1;\n  if (match.token.length < password.length) {\n    if (match.token.length === 1) {\n      minGuesses = MIN_SUBMATCH_GUESSES_SINGLE_CHAR;\n    } else {\n      minGuesses = MIN_SUBMATCH_GUESSES_MULTI_CHAR;\n    }\n  }\n  return minGuesses;\n};\nconst matchers = {\n  bruteforce: bruteforceMatcher,\n  date: dateMatcher,\n  dictionary: dictionaryMatcher,\n  regex: regexMatcher,\n  repeat: repeatMatcher,\n  sequence: sequenceMatcher,\n  spatial: spatialMatcher,\n  separator: separatorMatcher\n};\nconst getScoring = (name, match) => {\n  if (matchers[name]) {\n    return matchers[name](match);\n  }\n  if (zxcvbnOptions.matchers[name] && 'scoring' in zxcvbnOptions.matchers[name]) {\n    return zxcvbnOptions.matchers[name].scoring(match);\n  }\n  return 0;\n};\n// ------------------------------------------------------------------------------\n// guess estimation -- one function per match pattern ---------------------------\n// ------------------------------------------------------------------------------\n// eslint-disable-next-line complexity, max-statements\nvar estimateGuesses = ((match, password) => {\n  const extraData = {};\n  // a match's guess estimate doesn't change. cache it.\n  if ('guesses' in match && match.guesses != null) {\n    return match;\n  }\n  const minGuesses = getMinGuesses(match, password);\n  const estimationResult = getScoring(match.pattern, match);\n  let guesses = 0;\n  if (typeof estimationResult === 'number') {\n    guesses = estimationResult;\n  } else if (match.pattern === 'dictionary') {\n    guesses = estimationResult.calculation;\n    extraData.baseGuesses = estimationResult.baseGuesses;\n    extraData.uppercaseVariations = estimationResult.uppercaseVariations;\n    extraData.l33tVariations = estimationResult.l33tVariations;\n  }\n  const matchGuesses = Math.max(guesses, minGuesses);\n  return {\n    ...match,\n    ...extraData,\n    guesses: matchGuesses,\n    guessesLog10: utils.log10(matchGuesses)\n  };\n});\n\nexport { estimateGuesses as default };\n"],"mappings":"AAAA,SAASA,gCAAgC,EAAEC,+BAA+B,QAAQ,sBAAsB;AACxG,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAOC,iBAAiB,MAAM,sCAAsC;AACpE,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,iBAAiB,MAAM,sCAAsC;AACpE,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,gBAAgB,MAAM,qCAAqC;AAElE,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACzC,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIF,KAAK,CAACG,KAAK,CAACC,MAAM,GAAGH,QAAQ,CAACG,MAAM,EAAE;IACxC,IAAIJ,KAAK,CAACG,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MAC5BF,UAAU,GAAGf,gCAAgC;IAC/C,CAAC,MAAM;MACLe,UAAU,GAAGd,+BAA+B;IAC9C;EACF;EACA,OAAOc,UAAU;AACnB,CAAC;AACD,MAAMG,QAAQ,GAAG;EACfC,UAAU,EAAEf,iBAAiB;EAC7BgB,IAAI,EAAEf,WAAW;EACjBgB,UAAU,EAAEf,iBAAiB;EAC7BgB,KAAK,EAAEf,YAAY;EACnBgB,MAAM,EAAEf,aAAa;EACrBgB,QAAQ,EAAEf,eAAe;EACzBgB,OAAO,EAAEf,cAAc;EACvBgB,SAAS,EAAEf;AACb,CAAC;AACD,MAAMgB,UAAU,GAAGA,CAACC,IAAI,EAAEf,KAAK,KAAK;EAClC,IAAIK,QAAQ,CAACU,IAAI,CAAC,EAAE;IAClB,OAAOV,QAAQ,CAACU,IAAI,CAAC,CAACf,KAAK,CAAC;EAC9B;EACA,IAAIV,aAAa,CAACe,QAAQ,CAACU,IAAI,CAAC,IAAI,SAAS,IAAIzB,aAAa,CAACe,QAAQ,CAACU,IAAI,CAAC,EAAE;IAC7E,OAAOzB,aAAa,CAACe,QAAQ,CAACU,IAAI,CAAC,CAACC,OAAO,CAAChB,KAAK,CAAC;EACpD;EACA,OAAO,CAAC;AACV,CAAC;AACD;AACA;AACA;AACA;AACA,IAAIiB,eAAe,GAAIA,CAACjB,KAAK,EAAEC,QAAQ,KAAK;EAC1C,MAAMiB,SAAS,GAAG,CAAC,CAAC;EACpB;EACA,IAAI,SAAS,IAAIlB,KAAK,IAAIA,KAAK,CAACmB,OAAO,IAAI,IAAI,EAAE;IAC/C,OAAOnB,KAAK;EACd;EACA,MAAME,UAAU,GAAGH,aAAa,CAACC,KAAK,EAAEC,QAAQ,CAAC;EACjD,MAAMmB,gBAAgB,GAAGN,UAAU,CAACd,KAAK,CAACqB,OAAO,EAAErB,KAAK,CAAC;EACzD,IAAImB,OAAO,GAAG,CAAC;EACf,IAAI,OAAOC,gBAAgB,KAAK,QAAQ,EAAE;IACxCD,OAAO,GAAGC,gBAAgB;EAC5B,CAAC,MAAM,IAAIpB,KAAK,CAACqB,OAAO,KAAK,YAAY,EAAE;IACzCF,OAAO,GAAGC,gBAAgB,CAACE,WAAW;IACtCJ,SAAS,CAACK,WAAW,GAAGH,gBAAgB,CAACG,WAAW;IACpDL,SAAS,CAACM,mBAAmB,GAAGJ,gBAAgB,CAACI,mBAAmB;IACpEN,SAAS,CAACO,cAAc,GAAGL,gBAAgB,CAACK,cAAc;EAC5D;EACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAG,CAACT,OAAO,EAAEjB,UAAU,CAAC;EAClD,OAAO;IACL,GAAGF,KAAK;IACR,GAAGkB,SAAS;IACZC,OAAO,EAAEO,YAAY;IACrBG,YAAY,EAAExC,KAAK,CAACyC,KAAK,CAACJ,YAAY;EACxC,CAAC;AACH,CAAE;AAEF,SAAST,eAAe,IAAIc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
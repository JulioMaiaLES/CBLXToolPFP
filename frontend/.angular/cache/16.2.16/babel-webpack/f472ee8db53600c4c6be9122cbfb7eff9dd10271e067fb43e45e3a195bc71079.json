{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nexport class LanguageService {\n  constructor(translate) {\n    this.translate = translate;\n  }\n  get current() {\n    const allLangs = this.translate.getLangs();\n    const browserLang = allLangs.includes(this.translate.getBrowserLang() || '') ? this.translate.getBrowserLang() : '';\n    return this.translate.currentLang || localStorage.getItem('language') || browserLang || 'pt-br';\n  }\n  set current(value) {\n    localStorage.setItem('language', value);\n  }\n  static {\n    this.ɵfac = function LanguageService_Factory(t) {\n      return new (t || LanguageService)(i0.ɵɵinject(i1.TranslateService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LanguageService,\n      factory: LanguageService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["LanguageService","constructor","translate","current","allLangs","getLangs","browserLang","includes","getBrowserLang","currentLang","localStorage","getItem","value","setItem","i0","ɵɵinject","i1","TranslateService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\j-mai\\Documents\\CBLXToolPFP\\frontend\\src\\app\\services\\language.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LanguageService {\n  constructor(private translate: TranslateService) {}\n\n  get current() {\n    const allLangs = this.translate.getLangs();\n    const browserLang = allLangs.includes(this.translate.getBrowserLang() || '')\n      ? this.translate.getBrowserLang()\n      : '';\n\n    return (\n      this.translate.currentLang ||\n      localStorage.getItem('language') ||\n      browserLang ||\n      'pt-br'\n    );\n  }\n\n  set current(value: string) {\n    localStorage.setItem('language', value);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;EAAqB;EAElD,IAAIC,OAAOA,CAAA;IACT,MAAMC,QAAQ,GAAG,IAAI,CAACF,SAAS,CAACG,QAAQ,EAAE;IAC1C,MAAMC,WAAW,GAAGF,QAAQ,CAACG,QAAQ,CAAC,IAAI,CAACL,SAAS,CAACM,cAAc,EAAE,IAAI,EAAE,CAAC,GACxE,IAAI,CAACN,SAAS,CAACM,cAAc,EAAE,GAC/B,EAAE;IAEN,OACE,IAAI,CAACN,SAAS,CAACO,WAAW,IAC1BC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAChCL,WAAW,IACX,OAAO;EAEX;EAEA,IAAIH,OAAOA,CAACS,KAAa;IACvBF,YAAY,CAACG,OAAO,CAAC,UAAU,EAAED,KAAK,CAAC;EACzC;;;uBAnBWZ,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA;IAAA;EAAA;;;aAAfjB,eAAe;MAAAkB,OAAA,EAAflB,eAAe,CAAAmB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
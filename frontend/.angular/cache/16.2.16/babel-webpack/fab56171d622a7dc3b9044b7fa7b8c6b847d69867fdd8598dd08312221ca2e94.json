{"ast":null,"code":"import { DIALOG_DATA } from '@angular/cdk/dialog';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./../../../services/auth.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"angular-notifier\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../../shared/loading/loading.component\";\nimport * as i10 from \"@ngx-translate/core\";\nimport * as i11 from \"@pipes/form-error.pipe\";\nfunction ForgotPasswordComponent_loading_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"loading\");\n  }\n}\nexport class ForgotPasswordComponent {\n  constructor(data, fb, authService, dialogRef, notifier) {\n    this.data = data;\n    this.fb = fb;\n    this.authService = authService;\n    this.dialogRef = dialogRef;\n    this.notifier = notifier;\n    this.loading = false;\n    this.form = this.fb.group({\n      email: [this.data.email, [Validators.required, Validators.email]]\n    });\n  }\n  handleFormSubmit() {\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n    this.setLoading(true);\n    this.authService.forgotPassword(this.form.value).subscribe({\n      next: () => {\n        this.setLoading(false);\n        this.notifier.notify('success', 'E-mail enviado com sucesso');\n        this.dialogRef.close();\n      },\n      error: () => {\n        this.setLoading(false);\n      }\n    });\n  }\n  setLoading(value) {\n    this.loading = value;\n    this.dialogRef.disableClose = value;\n  }\n  static {\n    this.ɵfac = function ForgotPasswordComponent_Factory(t) {\n      return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(DIALOG_DATA), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.NotifierService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForgotPasswordComponent,\n      selectors: [[\"app-forgot-password\"]],\n      decls: 25,\n      vars: 24,\n      consts: [[\"matDialogTitle\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"autocomplete\", \"username\"], [\"type\", \"button\", \"mat-button\", \"\", 1, \"alt\", 3, \"mat-dialog-close\"], [\"type\", \"submit\", \"mat-button\", \"\", 1, \"primary\"], [4, \"ngIf\"]],\n      template: function ForgotPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵpipe(2, \"translate\");\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4);\n          i0.ɵɵpipe(5, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.handleFormSubmit();\n          });\n          i0.ɵɵelementStart(7, \"mat-dialog-content\")(8, \"mat-form-field\", 2)(9, \"mat-label\");\n          i0.ɵɵtext(10);\n          i0.ɵɵpipe(11, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 3);\n          i0.ɵɵelementStart(13, \"mat-error\");\n          i0.ɵɵtext(14);\n          i0.ɵɵpipe(15, \"translate\");\n          i0.ɵɵpipe(16, \"formError\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(17, \"mat-dialog-actions\")(18, \"button\", 4);\n          i0.ɵɵtext(19);\n          i0.ɵɵpipe(20, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"button\", 5);\n          i0.ɵɵtext(22);\n          i0.ɵɵpipe(23, \"translate\");\n          i0.ɵɵtemplate(24, ForgotPasswordComponent_loading_24_Template, 1, 0, \"loading\", 6);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 10, \"forgot-password.title\"), \" \");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 12, \"forgot-password.subtitle\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 14, \"forgot-password.email\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(15, 16, i0.ɵɵpipeBind1(16, 18, ctx.form.controls.email.errors)), \" \");\n          i0.ɵɵadvance(3);\n          i0.ɵɵattribute(\"align\", \"end\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"mat-dialog-close\", false);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 20, \"global.cancel\"), \" \");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(23, 22, \"global.confirm\"), \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i5.MatButton, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.MatInput, i7.MatFormField, i7.MatLabel, i7.MatError, i8.NgIf, i3.MatDialogClose, i3.MatDialogTitle, i3.MatDialogContent, i3.MatDialogActions, i9.LoadingComponent, i10.TranslatePipe, i11.FormErrorPipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["DIALOG_DATA","Validators","i0","ɵɵelement","ForgotPasswordComponent","constructor","data","fb","authService","dialogRef","notifier","loading","form","group","email","required","handleFormSubmit","invalid","markAllAsTouched","setLoading","forgotPassword","value","subscribe","next","notify","close","error","disableClose","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","MatDialogRef","i4","NotifierService","selectors","decls","vars","consts","template","ForgotPasswordComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ForgotPasswordComponent_Template_form_ngSubmit_6_listener","ɵɵtemplate","ForgotPasswordComponent_loading_24_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtextInterpolate","ɵɵproperty","controls","errors","ɵɵattribute"],"sources":["C:\\Users\\j-mai\\Documents\\CBLXToolPFP\\frontend\\src\\app\\components\\modals\\forgot-password\\forgot-password.component.ts","C:\\Users\\j-mai\\Documents\\CBLXToolPFP\\frontend\\src\\app\\components\\modals\\forgot-password\\forgot-password.component.html"],"sourcesContent":["import { DIALOG_DATA } from '@angular/cdk/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { NotifierService } from 'angular-notifier';\nimport { AuthService } from './../../../services/auth.service';\n\ninterface Data {\n  email: string;\n}\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent {\n  constructor(\n    @Inject(DIALOG_DATA) private data: Data,\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private dialogRef: MatDialogRef<ForgotPasswordComponent>,\n    private notifier: NotifierService\n  ) {}\n\n  loading = false;\n  form = this.fb.group({\n    email: [this.data.email, [Validators.required, Validators.email]],\n  });\n\n  handleFormSubmit() {\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.setLoading(true);\n    this.authService.forgotPassword(this.form.value as string).subscribe({\n      next: () => {\n        this.setLoading(false);\n        this.notifier.notify('success', 'E-mail enviado com sucesso');\n        this.dialogRef.close();\n      },\n      error: () => {\n        this.setLoading(false);\n      },\n    });\n  }\n\n  setLoading(value: boolean) {\n    this.loading = value;\n    this.dialogRef.disableClose = value;\n  }\n}\n","<h1 matDialogTitle\n  >{{ 'forgot-password.title' | translate }}\n  <p>{{ 'forgot-password.subtitle' | translate }}</p>\n</h1>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"handleFormSubmit()\">\n  <mat-dialog-content>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>{{ 'forgot-password.email' | translate }}</mat-label>\n      <input\n        matInput\n        type=\"email\"\n        formControlName=\"email\"\n        autocomplete=\"username\"\n      />\n      <mat-error>\n        {{ form.controls.email.errors | formError | translate }}\n      </mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions [attr.align]=\"'end'\">\n    <button type=\"button\" class=\"alt\" mat-button [mat-dialog-close]=\"false\">\n      {{ 'global.cancel' | translate }}\n    </button>\n    <button type=\"submit\" class=\"primary\" mat-button>\n      {{ 'global.confirm' | translate }}\n      <loading *ngIf=\"loading\"></loading>\n    </button>\n  </mat-dialog-actions>\n</form>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}